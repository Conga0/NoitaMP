name: Windows Lua Unit Testing

on: [ push, pull_request ]

jobs:
  lua-unit-testing-on-windows-latest:
    name: "LuaUnit on Windows-latest (mingw32)"
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3.1.0
      
      #- name: Dump GitHub context
      #  env:
      #    GITHUB_CONTEXT: ${{ toJSON(github) }}
      #  run: echo "$GITHUB_CONTEXT"
      
      - name: Install and init luarocks
        shell: cmd
        run: |
          cd ${{ github.workspace}}\mods\noita-mp\
          set INIT_PATH=%CD%
          
          REM // resolve absolute path
          set REL_PATH=..\..\.building\luarocks-3.9.1-windows-32
          set ABS_PATH=
          rem // Save current directory and change to target directory
          pushd %REL_PATH%
          rem // Save value of CD variable (current directory)
          set ABS_PATH=%CD%
          rem // Restore original directory
          popd
          echo Relative path: %REL_PATH%
          echo Maps to path: %ABS_PATH%
          
          REM // init luarocks
          %ABS_PATH%\luarocks --lua-dir="%INIT_PATH%\..\..\LuaJIT-2.0.4\bin\luajit.exe" --lua-version="5.1" init noita-mp --output="%INIT_PATH%" --homepage="https://github.com/Ismoh/NoitaMP" --lua-versions="5.1" --license="GNU GPL v3"
          
      - name: Make use of LuaJIT-2.0.4
        shell: cmd
        run: |
          echo 'lua_interpreter = "luajit.exe" ^
            variables = { ^
            LUA_BINDIR = "yourAbsolutePathTo\\NoitaMP\\LuaJIT-2.0.4\\bin", -- LUA_BINDIR = "C:\\msys64\\mingw32\\bin", ^
            LUA_DIR = "yourAbsolutePathTo\\NoitaMP\\LuaJIT-2.0.4", -- LUA_DIR = "C:\\msys64\\mingw32", ^
            LUA_INCDIR = "yourAbsolutePathTo\\NoitaMP\\LuaJIT-2.0.4\\include" -- LUA_INCDIR = "C:\\msys64\\mingw32/include/lua5.1" ^
          }' > ${{ github.workspace}}\mods\noita-mp\.luarocks\config-5.1.lua
      
      - name: Run LuaUnit 3.4
        shell: cmd
        id: lua_unit_tests
        run: |
          cd ${{ github.workspace}}\mods\noita-mp\
          luarocks test > result.log
        
          # https://timheuer.com/blog/manually-force-a-failure-in-github-action-step/
          $testFail = Select-String -Path ${{ github.workspace }}\mods\noita-mp\result.log -Pattern 'FAIL' -CaseSensitive
          echo "{fail}={$testFail}" >> $GITHUB_OUTPUT
        
          $testError = Select-String -Path ${{ github.workspace }}\mods\noita-mp\result.log -Pattern 'ERROR' -CaseSensitive
          echo "{error}={$testError}" >> $GITHUB_OUTPUT
        
          $notFound = Get-Content -Path ${{ github.workspace }}\mods\noita-mp\result.log
          echo "{not_found}={$notFound}" >> $GITHUB_OUTPUT
      
      - name: Unit test failed?
        if: ${{ steps.lua_unit_tests.outputs.fail != '' || steps.lua_unit_tests.outputs.error != '' || steps.lua_unit_tests.outputs.not_found == '' }}
        run: |
          echo "steps.lua_unit_tests.outputs.fail = ${{ steps.lua_unit_tests.outputs.fail }}"
          echo "steps.lua_unit_tests.outputs.error = ${{ steps.lua_unit_tests.outputs.error }}"
          echo "steps.lua_unit_tests.outputs.not_found = ${{ steps.lua_unit_tests.outputs.not_found }}"
          echo "Unit tests failed!"
          # exit 1
      
      - name: Install dependencies
        shell: cmd
        run: |
          cd ${{ github.workspace}}\mods\noita-mp\
          luarocks install luacov
          luarocks install lua-path
          luarocks install dkjson
          luarocks install luafilesystem
          luarocks install luacov-coveralls
          ls -R
      
      - name: Generate coverage report with luacov
        run: |
          dir -Path ${{ github.workspace }}\mods\noita-mp\tests -Filter *.lua -Recurse | %{& '${{ github.workspace }}\mods\noita-mp\lua.bat' -lluacov $_.FullName -o text --verbose }
        
          Start-Process -FilePath "${{ env.lua_install_bin_dir }}\luacov.bat" -Wait -NoNewWindow
      
      # - name: Generate coverage report with luacov-coveralls
      #   shell: cmd
      #   env:
      #     COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     COVERALLS_DEBUG: true
      #   run: |
      #     ${{ env.lua_install_bin_dir }}\luacov-coveralls.bat -v
      
      - name: Fix codecov path issue
        # shell: pwsh
        run: |
          # ls -R
          # $content = Get-Content -Path ${{ github.workspace }}/luacov.report.out
          # $content = $content.Replace("\", "/")
          # $content > ${{ github.workspace }}/luacov.report.out
          # Write-Host $content
          
          $(cat ${{ github.workspace }}/luacov.report.out | sed -e 's_\\_/_g') > ${{ github.workspace }}/luacov.report.out
          cat ${{ github.workspace }}/luacov.report.out
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ${{ github.workspace }}
          flags: unittesting
          functionalities: network
          name: Windows Lua Unit Testing
          verbose: true
