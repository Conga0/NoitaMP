name: Increase version on pull request
on:
  pull_request:
    types: [ opened, edited, synchronize, closed ]
jobs:
  find-linked-issues-and-copy-labels-to-pull-request:
    name: Copy labels to pull request
    runs-on: ubuntu-latest
    outputs:
      labelNames: $${{ steps.add_labels.outputs.labelNames }}
    steps:
      - name: Find linked issues
        id: links
        uses: hossainemruz/linked-issues@main
        with:
          pr_url: ${{github.event.pull_request.html_url}}
          format: IssueNumber
      
      - name: Add labels of associated/linked issue to the pull request
        id: add_labels
        run: |
          for issueNumber in ${{ steps.links.outputs.issues }}
          do
            issueUrl=$( echo ${{ github.event.pull_request.base.repo.issues_url }} | sed "s/{\/number}/\/$issueNumber/g" )
            labels=$( curl $issueUrl | jq '.labels')
            echo "labels="$labels
        
            for label in $( echo $labels | jq -r '.[] | .name' )
            do
              labelNames="${labelNames:+$labelNames,}\"$label\""
            done
        
          done
          echo "labelNames="$labelNames
          data="{\"labels\":[${labelNames}]}"
        
          curlResponse=`curl --write-out '%{http_code}' --output /dev/null --request POST \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: token ${{ github.token }}' \
          --header 'Content-Type: application/json' \
          --url 'https://api.github.com/repos/${{github.repository}}/issues/${{github.event.number}}/labels' \
          --data-raw $data`
        
          if [[ $curlResponse == *"200"* ]]
          then
            echo "SUCCESS"
          else
            echo "FAILURE"
            exit 1
          fi
        
          echo "::set-output name=labelNames::${labelNames}"
  
  increase-version-by-labels:
    needs: find-linked-issues-and-copy-labels-to-pull-request
    env:
      LABEL_NAMES: ${{ needs.find-linked-issues-and-copy-labels-to-pull-request.outputs.labelNames }}
      VERSION_FILE_NAME: 'mods/noita-mp/.version'
      VERSION_FRAGMENT: 'will be fetched by file'
    name: Increase version by labels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      - name: Increase version depending on labels
        uses: HardNorth/github-version-generate@v1.1.2
        with:
          version-source: file
          version-file: ${{ env.VERSION_FILE_NAME }}
          version-file-extraction-pattern: '^v(.*)'
          next-version-increment-major: ${{ contains(env.LABEL_NAMES, 'rework') }}
          next-version-increment-minor: ${{ contains(env.LABEL_NAMES, 'enhancement') }}
          next-version-increment-patch: ${{ contains(env.LABEL_NAMES, 'bug') }}
          next-version-cut-build-metadata: false
          next-version-put-build-metadata: true
          
      - name: Extend version with custom build numbers
        run: |
          echo "NEXT_VERSION=v$NEXT_VERSION+$(git log --oneline | wc -l)" >> $GITHUB_ENV

      - name: Add comment to pull request
        run: |
          body="{\"body\":\"When this pull request was merged\:\n- Version will be automatically increase to **$NEXT_VERSION** in **${{ github.base_ref }}**\n- Tag **$NEXT_VERSION** will be created to the specific commit.\"}"
          
          curlResponse=`curl --write-out '%{http_code}' --output /dev/null --request POST \
          --header 'Accept: application/vnd.github+json' \
          --header 'Authorization: token ${{ github.token }}' \
          --url 'https://api.github.com/repos/${{github.repository}}/issues/${{github.event.number}}/comments' \
          --data-raw "$body"`
          
          if [[ $curlResponse == *"201"* ]]
          then
            echo "SUCCESS"
          else
            echo "FAILURE"
            exit 1
          fi
  
      - name: Commit version changes and tag it
        if: github.event.pull_request.merged
        run: |
          git fetch
          git checkout ${{ github.base_ref }}
          git pull origin ${{ github.base_ref }}
          echo "$NEXT_VERSION" > $VERSION_FILE_NAME
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add $VERSION_FILE_NAME
          git commit -m "Updated version of https://github.com/${{github.repository}}/pull/${{github.event.number}} to $NEXT_VERSION"
          git tag $NEXT_VERSION -a "Automatic tag creation. For further information, see https://github.com/${{github.repository}}/pull/${{github.event.number}}"
          git push origin ${{ github.base_ref }} --tags
          